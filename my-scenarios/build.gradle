group = "co.remotectrl.api"
version = "0.0.1-SNAPSHOT"

apply plugin: 'scala'

buildscript {
  ext {
    scalaVersion = "2.11.8"
    gatlingVersion = "2.2.4"
  }
}

repositories {
  jcenter()
}

configurations {
  gatling
}

dependencies {

  gatling "org.scala-lang:scala-library:${scalaVersion}"
  gatling "io.gatling:gatling-app:${gatlingVersion}"
  gatling "io.gatling:gatling-test-framework:${gatlingVersion}"
  gatling "io.gatling.highcharts:gatling-charts-highcharts:${gatlingVersion}"
}

sourceSets {
  simulations {
    scala {
      srcDirs = ["src/load/scala"]
    }
    resources {
      srcDirs = ["src/load/resources"]
    }
    compileClasspath += configurations.gatling
  }
}


task gatlingRun(type: JavaExec) {
  description = "Run gatling tests"
  new File("${buildDir}/reports/gatling").mkdirs()
  classpath = sourceSets.simulations.runtimeClasspath + configurations.gatling
  main = "io.gatling.app.Gatling"
  args = ["--simulation", "co.remotectrl.myevent.scenarios.load.MyLoad",
          "--simulations-folder", "simulations/resources",
          "--data-folder", "simulations/resources",
          "--results-folder", "${buildDir}/reports/gatling"
  ]
}

task showConfigurations  {
  doLast {
    configurations.all { conf -> println(conf) }
  }
}